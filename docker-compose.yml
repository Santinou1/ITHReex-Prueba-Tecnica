# Docker Compose - IthReex Full Stack Application
# 
# Uso:
#   - Levantar todo:           docker-compose up
#   - Levantar con archivos separados: docker-compose -f docker-compose.db.yml -f docker-compose.backend.yml -f docker-compose.frontend.yml up
#   - Solo base de datos:      docker-compose -f docker-compose.db.yml up
#   - Solo backend:            docker-compose -f docker-compose.db.yml -f docker-compose.backend.yml up
#   - Solo frontend:           docker-compose -f docker-compose.frontend.yml up

version: "3.8"
services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=ithreex
      - POSTGRES_PASSWORD=ithreex123
      - POSTGRES_DB=ithreex
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./backend/database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ithreex"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=ithreex
      - DB_PASSWORD=ithreex123
      - DB_NAME=ithreex
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    restart: always

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules  
    environment:
      - VITE_API_URL=http://localhost:4000/api
    restart: always

volumes:
  postgres_data:
